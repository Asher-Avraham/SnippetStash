name: CI

on:
  push:
    branches: [ main, ci ]
  pull_request:
    branches: [ main, ci ]

jobs:
  build_application:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Check out code 
      uses: actions/checkout@v4

    - name: Install dependencies
      run: | 
          npm ci
          cd backend
          npm install
          cd tests
          npm ci
          cd ../..

    - name: Verify Cypress installation
      run: ls -la node_modules/cypress

    - name: Run frontend tests - unit and integration
      run: npm test

    - name: Run backend tests
      working-directory: ./backend
      run: |
          npm test
          cd ..
    
    - name: Create version number
      id: vars
      run: echo "sha_short=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag Docker images
      run: |
        docker build -t frontend/${{ secrets.DOCKER_USERNAME }}/snippetshare:${{ steps.vars.outputs.sha_short }} -f Dockerfile.frontend .
        docker build -t backend/${{ secrets.DOCKER_USERNAME }}/snippetshare:${{ steps.vars.outputs.sha_short }} -f backend/Dockerfile ./backend


    - name: Run end-to-end tests
      run: |
        docker compose up -d
        sleep 10 # Wait for the services to start
        docker ps
        curl http://localhost:80 # Optional: check service health
        npx cypress run --spec cypress/e2e/create_snippet.cy.ts --config baseUrl=http://localhost:80
        docker compose down
        
    - name: Push images to Docker Hub
      run: |
            docker push ${{ secrets.DOCKER_USERNAME }}/project-frontend:${{ steps.vars.outputs.sha_short }}
            docker push ${{ secrets.DOCKER_USERNAME }}/project-backend:${{ steps.vars.outputs.sha_short }}
            echo "completed! pushed images to Docker Hub"  